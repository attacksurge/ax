#!/usr/bin/env bash

###################################################################
#  Header
#
AXIOM_PATH="$HOME/.axiom"
source "$AXIOM_PATH/interact/includes/vars.sh"
source "$AXIOM_PATH/interact/includes/functions.sh"
source "$AXIOM_PATH/interact/includes/system-notification.sh"
begin=$(date +%s)
start="$(pwd)"
BASEOS="$(uname)"
account_path=$(ls -la $AXIOM_PATH/axiom.json | rev | cut -d " " -f 1 | rev)
accounts=$(ls -l "$AXIOM_PATH/accounts/" | grep "json" | grep -v 'total ' | awk '{ print $9 }' | sed 's/\.json//g')
current=$(ls -lh ~/.axiom/axiom.json | awk '{ print $11 }' | tr '/' '\n' | grep json | sed 's/\.json//g') > /dev/null 2>&1
provider="$(jq -r ".provider" "$AXIOM_PATH/axiom.json")"

###################################################################
#  Get default instance size if ax sizes default is used
#
get_default_size() {
  if [[ "$provider" == "azure" ]]; then
    default_size="Standard_B1ls"

  elif [[ "$provider" == "aws" ]]; then
    default_size="t2.medium"

  elif [[ "$provider" == "do" ]]; then
    default_size="s-1vcpu-1gb"

  elif [[ "$provider" == "ibm-classic" ]]; then
    default_size="C1_2X2X25"

  elif [[ "$provider" == "ibm-vpc" ]]; then
    default_size="cx2-2x4"

  elif [[ "$provider" == "linode" ]]; then
    default_size="g6-standard-1"

  elif [[ "$provider" == "gcp" ]]; then
    default_size="n1-standard-1"

  elif [[ "$provider" == "hetzner" ]]; then
    default_size="cx22"

  elif [[ "$provider" == "scaleway" ]]; then
    default_size="DEV1-S"
  
  elif [[ "$provider" == "exoscale" ]]; then
    default_size="standard.medium"

  else
    echo "Error: Unknown provider '$provider'"
    exit 1
  fi
}

###########################################################################################################
# Help Menu:
#
function usage() {
        echo -e "${BWhite}Description:${Color_Off}"
        echo -e "  Manage the default instance size used by '${BGreen}axiom-init${Color_Off}' or '${BGreen}axiom-fleet${Color_Off}' with '${BGreen}axiom-sizes${Color_Off}'!"
        echo -e "  List all sizes the cloud provider has with '${BGreen}axiom-sizes ls${Color_Off}' and select a new one with '${BGreen}axiom-sizes select \$new_size${Color_Off}' "
        echo -e "  All this does is replaces the .default_size in ~/.axiom/axiom.json with a new size"
        echo -e "${BWhite}Examples:"
        echo -e "  ${Green}axiom-sizes ls${Color_Off} # List all sizes the cloud provider offers"
        echo -e "  ${Green}axiom-sizes select Standard_F2${Color_Off} # Set a new default instance size to use with future ${Color_Off}'${BGreen}axiom-init/axiom-fleet${Color_Off}'"
        echo -e "  ${Green}axiom-sizes default${Color_Off} # Restore instance size to the default"
        echo -e "${BWhite}Usage:${Color_Off}"
        echo -e "  ls (optional)"
        echo -e "    List all available instance sizes '${BGreen}axiom-sizes ls${Color_Off}'"
        echo -e "  get (optional)"
        echo -e "    Print information about currently used instance size, equivalent to (cat ~/.axiom/axiom.json) '${BGreen}axiom-sizes get${Color_Off}'"
        echo -e "  select <required insntance size name>"
        echo -e "    Select a new instance size to use for future ${Color_Off}'${BGreen}axiom-init/axiom-fleet${Color_Off}', replaces 'default_size' in ~/.axiom/axiom.json with new 'default_size' (must be valid instance size from '${BGreen}ax sizes ls${Color_Off}')"
        echo -e "  default (optional)"
        echo -e "    Restore the default instance size '${BGreen}axiom-sizes default${Color_Off}'"
        echo -e "  --debug (optional)"
        echo -e "    Enable debug mode (VERY VERBOSE!)"
        echo -e "  --help (optional)"
        echo -e "    Display this help menu"
exit
}

###########################################################################################################
#  Declare defaut variables
#
list="false"
help="true"
use="false"
default_size="false"

###########################################################################################################
#  Parse command line arguments
#
if [[ "$@" == "--help" ]] || [[ "$@" == "-h" ]] || [[ "$@" == "" ]]; then
usage
exit
fi
i=0
for arg in "$@"
do
    i=$((i+1))
    if [[  ! " ${pass[@]} " =~ " ${i} " ]]; then
        set=false
       if [[ "$arg" == "--debug" ]]; then
            set -xv
            set=true
            pass+=($i)
        fi
        if [[ "$arg" == "default" ]]; then
            restore_default_size=true
            set=true
            pass+=($i)
        fi
        if [[ "$arg" == "select" ]] ||[[ "$arg" == "set" ]] || [[ "$arg" == "use" ]] ; then
            n=$((i+1))
            use=true
            new_size=$(echo ${!n})
            set=true
            pass+=($i)
            pass+=($n)
        fi
        if [[ "$arg" == "ls" ]] || [[ "$arg" == "list" ]]; then
            list="true"
            set=true
            pass+=($i)
        fi
        if [[ "$arg" == "--help" ]] || [[ "$arg" == "-h" ]] || [[ "$arg" == "help" ]]; then
            usage
            exit
            set=true
            pass+=($i)
        fi
        if [[ "$arg" == "get" ]] ; then
            get="true"
            set=true
            pass+=($i)
        fi
        if  [[ "$set" != "true" ]]; then
            args="$args $arg"
        fi

    fi
done

# Get the default size in /.axiom/accout/account.json
#
if [[ "$get" == "true" ]]; then
 echo -e "${Green}Displaying Account Info from: $current${Color_Off}"
 cat $(echo $account_path)
 exit 1

# List sizes
#
elif [[ "$list" == "true" ]]; then
 echo -e "${Green}Listing Available Instance Sizes for Cloud provider in Account: $current${Color_Off}"
 sizes_list
 exit 1

# Use new instance size by name. Run axiom-init or axiom-fleet to use after updating
#
elif [[ "$use" == "true" ]]; then
 # Check if size is unset or emtpy
 if [ -z "${new_size+x}" ] || [ -z "$new_size" ]; then
  echo -e "${Red}No size provided, unable to select size.. exiting${Color_Off}"
  exit
 fi

 old="$(cat "$AXIOM_PATH/axiom.json" | jq -r '.default_size')"
 sizes_list | grep -q -w $new_size || { echo -e "${Red}Failed to find instance size with name: "$new_size"... exiting${Color_Off}" ; \
 echo -e "${Red}To print all available intance sizes, run ax sizes ls${Color_Off}" ; exit 1; }
 jq '.default_size="'$new_size'"' <"$account_path">"$AXIOM_PATH"/tmp.json ; mv "$AXIOM_PATH"/tmp.json "$account_path"
 echo -e "${Green}Successfully updated default_size $old with new instance size $new_size in account: $current${Color_Off}"
 echo -e "${Green}Run axiom-init or axiom-fleet to use it!${Color_Off}"

# Restore default size if ax sizes default is used
##
elif [[ "$restore_default_size" == "true" ]]; then
 get_default_size
 if [[ "$provider" == "ibm-classic" ]]; then
  ram="$(echo $default_size | cut -d , -f 1)"
  cpu="$(echo $default_size | cut -d , -f 2)"
  jq '.default_size="'$ram'"' <"$account_path">"$AXIOM_PATH"/tmp.json ; mv "$AXIOM_PATH"/tmp.json "$account_path"
  jq '.cpu="'$cpu'"' <"$account_path">"$AXIOM_PATH"/tmp.json ; mv "$AXIOM_PATH"/tmp.json "$account_path"
  echo -e "${Green}Successfully restored default size, updated ~/.axiom/axiom.json to use ram: $ram and cpu: $cpu in account: $current${Color_Off}"
  echo -e "${Green}Run axiom-init or axiom-fleet to use it!${Color_Off}"
 else
  jq '.default_size="'$default_size'"' <"$account_path">"$AXIOM_PATH"/tmp.json ; mv "$AXIOM_PATH"/tmp.json "$account_path"
  echo -e "${Green}Successfully restored default size, updated ~/.axiom/axiom.json with default instance size $default_size in account: $current${Color_Off}"
  echo -e "${Green}Run axiom-init or axiom-fleet to use it!${Color_Off}"
fi

# Valid command not provided
##
else
usage
fi
